{"version":3,"sources":["services/auth.js","services/api.js","services/notifications.js","pages/Login.js","pages/Cadastrar.js","pages/Profissional/Components/Header/Index.js","pages/Profissional/Components/HorarioSemana.js","pages/Profissional/CadastrarHorarios.js","pages/Paciente/AgendarHorarioBuscaProfissional.js","pages/Paciente/CardBuscaProfissionais.js","pages/NavBar.js","pages/Paciente/NavBarPaciente.js","pages/Paciente/BuscaProfissionais.js","services/ConfirmCancel.js","pages/Paciente/Consultas.js","pages/Profissional/NavBarProfissional.js","pages/Profissional/ConsultasProfissional.js","pages/Profissional/AdicionarHorario.js","pages/Profissional/GerenciamentoAgenda.js","pages/Profissional/Agendas.js","pages/Profissional/Relatorio.js","pages/AgendamentoHorario.js","pages/Admin/NavBarAdmin.js","pages/Admin/Especialidades.js","routes.js","App.js","index.js"],"names":["TOKEN_KEY","login","token","localStorage","setItem","getToken","getItem","api","axios","create","baseURL","interceptors","request","use","config","a","headers","Authorization","intercept","showError","message","toast","error","position","POSITION","BOTTOM_LEFT","autoClose","render","showSuccess","success","ReactDOM","document","getElementById","Login","history","useState","email","setEmail","password","setPassword","e","preventDefault","post","response","data","sucesso","tipoUsuario","push","Notifications","erro","location","state","cadastroSucesso","replace","classes","makeStyles","theme","root","flexGrow","card","width","margin","spacing","marginTop","textField","marginLeft","marginRight","paddingRight","button","useStyles","className","Container","fixed","Card","CardContent","Typography","gutterBottom","variant","component","onSubmit","TextField","id","label","value","required","onChange","target","fullWidth","type","autoComplete","CardActions","Box","display","flexDirection","m","bgcolor","Button","color","onClick","Cadastrar","Nome","Sobrenome","DataNascimento","cpf","Email","Senha","TipoUsuario","cnpj","Orgao","Estado","Registro","Endereco","Cep","Cidade","Bairro","Rua","Numero","Complemento","form","setForm","handleResponse","pathname","errors","forEach","description","SobreNome","Password","Cpf","PhoneNumber","Cnpj","useEffect","camposProfissional","campoPaciente","hidden","maxWidth","radio","tituloCampos","FormControl","FormLabel","RadioGroup","aria-label","name","row","FormControlLabel","control","Radio","utils","DateFnsUtils","format","date","KeyboardButtonProps","endereco","Header","href","data-toggle","data-target","aria-controls","aria-expanded","HorarioSemana","props","useContext","FormContext","horarios","x","nome","tableId","map","h","diaSemana","idItem","horaInicio","horaFim","elemId","querySelector","console","log","deletarItem","React","createContext","CadastrarHorarios","dataHoraInicio","Date","dataHoraFim","profissionalId","minDate","existErro","horarioInicio","horarioFim","selectedOption","filter","horario","n","novo_horario","parseInt","Provider","JSON","stringify","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","leftIcon","formControl","minWidth","selectEmpty","flexWrap","AgendarHorarioBuscaProfissional","profissional","pag","open","setOpen","selectedDate","setSelectedDate","listaHorarios","setListaHorarios","horarioId","Intervalo","setHorario","formaPagamento","setFormaPagamento","cardNumber","expiry","cvc","dadosPagamento","setDadosPagamento","especialidadeId","intervalo","especialidade","setEspecialidade","validatePagamento","get","params","status","require","amount","payerName","payerCpfCnpj","then","response_boleto","charges","window","link","handleClose","oldHorario","oldEspecialidade","getFullYear","getMonth","getDate","pop","tipoPagamento","cartao","validationResult","isValid","errorMessage","size","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","nomeCompleto","Grid","container","justify","item","xs","InputLabel","htmlFor","Select","event","displayEmpty","inputProps","especialidades","MenuItem","renderEspecialidade","cardNumberInputProps","cardExpiryInputProps","cardCVCInputProps","fieldClassName","marginBottom","avatar","red","chip","CardBuscaProfissionais","profissionais","CardHeader","Avatar","substring","action","direction","title","subheader","Rating","precision","avaliacao","readOnly","index","Chip","drawerWidth","menuButton","transition","transitions","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","flexShrink","mixins","toolbar","MenuAppBar","useTheme","anchorEl","setAnchorEl","openAccountMenu","Boolean","openLeftMenu","setOpenLeftMenu","CssBaseline","AppBar","clsx","appBar","appBarShift","Toolbar","IconButton","edge","hide","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","removeItem","Drawer","drawer","anchor","drawerPaper","drawerHeader","Divider","listLeftMenu","content","contentShift","NavBarPaciente","List","ListItem","ListItemIcon","ListItemText","primary","text","secondary","textAlign","BuscaProfissionais","setProfissionais","EspecialidadesIds","filtro","setFiltro","setEspecialidades","atualizaProfissionais","Paper","labelid","multiple","input","Input","alignContent","ConfirmCancel","Tooltip","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","labelCancel","callBack","autoFocus","labelAccept","tableIcons","FirstPage","forwardRef","ref","LastPage","NextPage","PreviousPage","SortArrow","ArrowUpward","Cancel","iconTableStatusPago","iconTableStatusNaoPago","dialogPaymentAction","TableConsultas","consultas","columns","field","rowData","classNameStatus","pagamentoConfirmado","titleComplementoPago","estado","setState","icons","options","paging","search","actionsColumnIndex","actions","icon","tooltip","components","Action","Pagamento","consulta","consultaId","indexOf","onEntered","renderButtonPaypal","Consultas","NavBarProfissional","paperCalendar","paperModal","ConsultasProfissional","setConsultas","openModal","setOpenModal","handleCloseModal","atualizarConsultas","defaultView","plugins","dayGridPlugin","weekends","header","left","center","right","height","editable","events","pacienteNome","start","end","eventTimeFormat","hour","minute","meridiem","eventClick","info","find","especialidadeNome","phoneNumber","handleOpenModal","fab","bottom","AdicionarHorario","callBackAdicionar","selectedDiaSemana","setSelectedDiaSemana","selectedHorarioInicio","setSelectedHorarioInicio","selectedHorarioFim","setSelectedHorarioFim","i","pad","num","s","substr","length","getHours","getMinutes","saveButton","closeButton","extendedIcon","NumberFormatCustom","inputRef","other","getInputRef","onValueChange","values","thousandSeparator","decimalSeparator","isNumericString","prefix","FormularioAgenda","diasSemana","setHorarios","dataInicio","setDataInicio","dataFim","setDataFim","titulo","setTitulo","precoConsulta","setPrecoConsulta","agendaId","match","mb","noValidate","t","InputProps","inputComponent","novosHorarios","slice","old","p","maxHeight","ListSubheader","indexHorario","ListItemSecondaryAction","iconSmall","GerenciamentoAgenda","TableAgendas","agendas","Edit","splice","Fab","Agendas","Relatorio","ano","setAno","mes","setMes","consultasAno","setConsultasAno","consultasMes","setConsultasMes","consultasTotais","especialidadesArray","concat","Object","keys","prop","Array","from","Set","getEspecialidades","buscaConsultasAno","buscaConsultasMes","top","strokeDasharray","dataKey","stackId","fill","randomColor","seed","tick","y","payload","transform","dy","textAnchor","labelFormatter","toLocaleDateString","AgendamentoHorario","startDate","setStartDate","selected","style","defaultValue","NavBarAdmin","Add","Save","Delete","Check","Clear","Especialidades","fetchEspecialidades","onRowAdd","newData","onRowUpdate","oldData","onRowDelete","Promise","resolve","reject","setTimeout","PrivateRoute","Component","rest","to","process","Routes","basename","path","exact","App","StrictMode"],"mappings":"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","file":"static/js/main.3a852b42.chunk.js","sourcesContent":["export const TOKEN_KEY = '@agenda-token';\r\n\r\nexport const login = token => localStorage.setItem(TOKEN_KEY, token);\r\n\r\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\n\r\nexport const logout = () => localStorage.removeItem(TOKEN_KEY);","import axios from 'axios';\r\nimport { getToken } from './auth';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:8000/api'\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n    \r\n    async function intercept(config){\r\n        const token = getToken();\r\n\r\n        if(token){\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n\r\n        return config;\r\n    }\r\n\r\n    return intercept(config);\r\n});\r\n\r\nexport default api;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nexport function showError(message){\r\n    toast.error(message, {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n        autoClose: 10000\r\n    });\r\n    render();\r\n}\r\n\r\nexport function showSuccess(message) {\r\n    toast.success(message,  {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n        autoClose: 6000\r\n    });\r\n    render();\r\n}\r\n\r\nfunction render(){\r\n    ReactDOM.render(\r\n        <ToastContainer />,\r\n        document.getElementById('notifications')\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { login } from '../services/auth';\r\nimport api from '../services/api';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport * as Notifications from '../services/notifications';\r\n\r\nexport default function Login({ history }) {\r\n\r\n  const [email, setEmail] = useState('vanessa@teste.com');\r\n  const [password, setPassword] = useState('Pass123');\r\n\r\n  if (history.location.state && history.location.state.cadastroSucesso) {\r\n    Notifications.showSuccess(\"Usuário cadastrado com sucesso!\");\r\n    history.replace('/Login', null);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const response = await api.post('/User/Login',\r\n      {\r\n        email,\r\n        password,\r\n      });\r\n    \r\n    if (response.data.sucesso) {\r\n      const { token, tipoUsuario } = response.data;\r\n\r\n      localStorage.setItem('TIPO_USUARIO', tipoUsuario);\r\n  \r\n      if(token !== null) {\r\n        login(token);\r\n      }\r\n\r\n      if (tipoUsuario == '0') {\r\n        history.push('/ConsultasPaciente');\r\n      } else if (tipoUsuario == '1') {\r\n        history.push('/ConsultasProfissional');\r\n      } else {\r\n        history.push('/Especialidades');\r\n      }\r\n    } else {\r\n      Notifications.showError(response.data.erro);\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    card: {\r\n      width: '60%',\r\n      margin: theme.spacing(2),\r\n      marginTop: '250px',\r\n      margin: 'auto',\r\n      maxWidth: 500, \r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      paddingRight: '35px'\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container fixed>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              Login\r\n            </Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                id=\"email\"\r\n                label=\"E-mail\"\r\n                value={email}\r\n                required={true}\r\n                className={classes.textField}\r\n                onChange={e => setEmail(e.target.value)}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                />\r\n              <TextField\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                required={true}\r\n                className={classes.textField}\r\n                onChange={e => setPassword(e.target.value)}\r\n                fullWidth\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n                />\r\n              <CardActions>\r\n                <Box display=\"flex\" flexDirection=\"row-reverse\" width=\"100%\" m={1} bgcolor=\"background.paper\">\r\n                  <Box>\r\n                    <Button variant=\"contained\" color=\"secondary\" className={classes.button} onClick={() => history.push('/Cadastrar')}>\r\n                      Cadastrar\r\n                    </Button>\r\n                  </Box>\r\n                  <Box>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\">\r\n                      Entrar\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </CardActions>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport api from '../services/api';\r\nimport * as Notifications from '../services/notifications';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nexport default function Cadastrar({ history }) {\r\n\r\n    const [form, setForm] = useState({\r\n        Nome: \"\",\r\n        Sobrenome: \"\",\r\n        DataNascimento: null,\r\n        cpf: \"\",\r\n        Email: \"\",\r\n        Senha: \"\",\r\n        TipoUsuario: \"0\",\r\n        cnpj: \"\",\r\n        Orgao: \"\",\r\n        Estado: \"\",\r\n        Registro: \"\",\r\n        Endereco: {\r\n            Cep: \"\",\r\n            Estado: \"\",\r\n            Cidade: \"\",\r\n            Bairro: \"\",\r\n            Rua: \"\",\r\n            Numero: \"\",\r\n            Complemento: \"\"\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        var camposProfissional = document.getElementById('professionalFields');\r\n        var campoPaciente = document.getElementById('patientFields');\r\n\r\n        if (form.TipoUsuario === \"0\") {\r\n            camposProfissional.hidden = true;\r\n            campoPaciente.hidden = false;\r\n        }\r\n\r\n        if (form.TipoUsuario === \"1\") {\r\n            camposProfissional.hidden = false;\r\n            campoPaciente.hidden = true;\r\n        }\r\n    }, [form]);\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (form.TipoUsuario === \"0\") {\r\n            handleResponse(\r\n                await api.post('/User/CadastroPaciente',\r\n                {\r\n                    Nome: form.Nome,\r\n                    SobreNome: form.Sobrenome,\r\n                    DataNascimento: form.DataNascimento,\r\n                    Email: form.Email,\r\n                    Password: form.Senha,\r\n                    Cpf: form.cpf,\r\n                    PhoneNumber: \"55704468412301\",\r\n                    Endereco: form.Endereco\r\n                })\r\n            );\r\n        } else {\r\n            handleResponse(\r\n                await api.post('/User/CadastroProfissional',\r\n                {\r\n                    Nome: form.Nome,\r\n                    SobreNome: form.Sobrenome,\r\n                    DataNascimento: form.DataNascimento,\r\n                    Email: form.Email,\r\n                    Password: form.Senha,\r\n                    Cnpj: form.cnpj,\r\n                    PhoneNumber: \"55704468412301\",\r\n                    Orgao: form.Orgao,\r\n                    Estado: form.Estado,\r\n                    Registro: form.Registro,\r\n                    Endereco: form.Endereco\r\n                })\r\n            );\r\n        }\r\n\r\n        function handleResponse(response) {\r\n            if (response.data.sucesso) {\r\n                history.push({\r\n                    pathname: '/Login',\r\n                    state: {\r\n                        cadastroSucesso: true\r\n                    }\r\n                });\r\n            } else {\r\n                response.data.errors.forEach(error => {\r\n                    Notifications.showError(error.description);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n          flexGrow: 1,\r\n        },\r\n        card: {\r\n          width: '60%',\r\n          marginTop: '100px',\r\n          margin: 'auto',\r\n          maxWidth: 500, \r\n        },\r\n        textField: {\r\n          marginLeft: theme.spacing(1),\r\n          marginRight: theme.spacing(1),\r\n          paddingRight: '35px'\r\n        },\r\n        button: {\r\n          margin: theme.spacing(1),\r\n        },\r\n        radio: {\r\n            marginTop: '35px'\r\n        },\r\n        tituloCampos: {\r\n            marginTop: theme.spacing(4),\r\n        }\r\n      }));\r\n    \r\n      const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container fixed>\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">Cadastro de Usuário</Typography>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <FormControl className={classes.radio}>\r\n                                <FormLabel component=\"legend\">Tipo de Usuário</FormLabel>\r\n                                <RadioGroup\r\n                                    aria-label=\"Tipo de Usuário\"\r\n                                    name=\"TipoUsuario\"\r\n                                    value={form.TipoUsuario}\r\n                                    onChange={e => setForm(\r\n                                        {\r\n                                            ...form,\r\n                                            TipoUsuario: e.target.value\r\n                                        }\r\n                                    )}\r\n                                    row>\r\n                                    <FormControlLabel value=\"0\" control={<Radio />} label=\"Paciente\" />\r\n                                    <FormControlLabel value=\"1\" control={<Radio />} label=\"Profissional\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            <Typography variant=\"h6\" gutterBottom className={classes.tituloCampos}>Informações Básicas</Typography>\r\n                            <TextField\r\n                                id=\"Nome\"\r\n                                label=\"Primerio Nome\"\r\n                                className={classes.textField}\r\n                                value={form.Nome}\r\n                                onChange={e => setForm(\r\n                                    {\r\n                                        ...form,\r\n                                        Nome: e.target.value\r\n                                    }\r\n                                )}\r\n                                required={true}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                            />\r\n                            <TextField\r\n                                id=\"Sobrenome\"\r\n                                label=\"Sobrenome\"\r\n                                required={true}\r\n                                className={classes.textField}\r\n                                value={form.Sobrenome}\r\n                                onChange={e => setForm(\r\n                                    {\r\n                                        ...form,\r\n                                        Sobrenome: e.target.value\r\n                                    }\r\n                                )}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                            />\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDatePicker\r\n                                    id=\"DataNascimento\"\r\n                                    label=\"Data de Nascimento\"\r\n                                    required={true}\r\n                                    fullWidth\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    className={classes.textField}\r\n                                    value={form.DataNascimento}\r\n                                    onChange={date => setForm(\r\n                                        {\r\n                                            ...form,\r\n                                            DataNascimento: date\r\n                                        }\r\n                                    )}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                            <Box id=\"professionalFields\" m={0}>\r\n                                <TextField\r\n                                    id=\"cnpj\"\r\n                                    required={form.TipoUsuario === \"1\"}\r\n                                    label=\"CNPJ\"\r\n                                    className={classes.textField}\r\n                                    value={form.cnpj}\r\n                                    onChange={e => setForm(\r\n                                        {\r\n                                            ...form,\r\n                                            cnpj: e.target.value\r\n                                        }\r\n                                    )}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                />\r\n                                <TextField\r\n                                    id=\"Orgao\"\r\n                                    label=\"Órgão\"\r\n                                    className={classes.textField}\r\n                                    value={form.Orgao}\r\n                                    onChange={e => setForm(\r\n                                        {\r\n                                            ...form,\r\n                                            Orgao: e.target.value\r\n                                        }\r\n                                    )}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                />\r\n                                <TextField\r\n                                    id=\"Estado\"\r\n                                    label=\"Estado\"\r\n                                    className={classes.textField}\r\n                                    value={form.Estado}\r\n                                    onChange={e => setForm(\r\n                                        {\r\n                                            ...form,\r\n                                            Estado: e.target.value\r\n                                        }\r\n                                    )}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                />\r\n                                <TextField\r\n                                    id=\"Registro\"\r\n                                    label=\"Registro\"\r\n                                    className={classes.textField}\r\n                                    value={form.Registro}\r\n                                    onChange={e => setForm(\r\n                                        {\r\n                                            ...form,\r\n                                            Registro: e.target.value\r\n                                        }\r\n                                    )}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Box>\r\n                            <Box id=\"patientFields\" m={0}>\r\n                                <TextField\r\n                                    id=\"cpf\"\r\n                                    label=\"CPF\"\r\n                                    required={form.TipoUsuario === \"0\"}\r\n                                    className={classes.textField}\r\n                                    value={form.cpf}\r\n                                    onChange={e => setForm(\r\n                                        {\r\n                                            ...form,\r\n                                            cpf: e.target.value\r\n                                        }\r\n                                    )}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Box>\r\n                            <Typography variant=\"h6\" gutterBottom className={classes.tituloCampos}>Endereço</Typography>\r\n                            <TextField\r\n                                id=\"Cep\"\r\n                                label=\"CEP\"\r\n                                required={true}\r\n                                className={classes.textField}\r\n                                value={form.Endereco.Cep}\r\n                                onChange={e => {\r\n                                    var endereco = {\r\n                                        ...form.Endereco\r\n                                    };\r\n                                    endereco.Cep = e.target.value;\r\n\r\n                                    setForm(\r\n                                    {\r\n                                        ...form,\r\n                                        Endereco: endereco\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                            />\r\n                            <TextField\r\n                                id=\"Estado\"\r\n                                label=\"Estado\"\r\n                                required={true}\r\n                                className={classes.textField}\r\n                                value={form.Endereco.Estado}\r\n                                onChange={e => {\r\n                                    var endereco = {\r\n                                        ...form.Endereco\r\n                                    };\r\n                                    endereco.Estado = e.target.value;\r\n\r\n                                    setForm(\r\n                                    {\r\n                                        ...form,\r\n                                        Endereco: endereco\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                            />\r\n                            <TextField\r\n                                id=\"Cidade\"\r\n                                label=\"Cidade\"\r\n                                required={true}\r\n                                className={classes.textField}\r\n                                value={form.Endereco.Cidade}\r\n                                onChange={e => {\r\n                                    var endereco = {\r\n                                        ...form.Endereco\r\n                                    };\r\n                                    endereco.Cidade = e.target.value;\r\n\r\n                                    setForm(\r\n                                    {\r\n                                        ...form,\r\n                                        Endereco: endereco\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                            />\r\n                            <TextField\r\n                                id=\"Bairro\"\r\n                                label=\"Bairro\"\r\n                                required={true}\r\n                                className={classes.textField}\r\n                                value={form.Endereco.Bairro}\r\n                                onChange={e => {\r\n                                    var endereco = {\r\n                                        ...form.Endereco\r\n                                    };\r\n                                    endereco.Bairro = e.target.value;\r\n\r\n                                    setForm(\r\n                                    {\r\n                                        ...form,\r\n                                        Endereco: endereco\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                            />\r\n                            <TextField\r\n                                id=\"Rua\"\r\n                                label=\"Rua\"\r\n                                required={true}\r\n                                className={classes.textField}\r\n                                value={form.Endereco.Rua}\r\n                                onChange={e => {\r\n                                    var endereco = {\r\n                                        ...form.Endereco\r\n                                    };\r\n                                    endereco.Rua = e.target.value;\r\n\r\n                                    setForm(\r\n                                    {\r\n                                        ...form,\r\n                                        Endereco: endereco\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                            />\r\n                            <TextField\r\n                                id=\"Numero\"\r\n                                label=\"Numero\"\r\n                                required={true}\r\n                                className={classes.textField}\r\n                                value={form.Endereco.Numero}\r\n                                onChange={e => {\r\n                                    var endereco = {\r\n                                        ...form.Endereco\r\n                                    };\r\n                                    endereco.Numero = e.target.value;\r\n\r\n                                    setForm(\r\n                                    {\r\n                                        ...form,\r\n                                        Endereco: endereco\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                            />\r\n                            <TextField\r\n                                id=\"Complemento\"\r\n                                label=\"Complemento\"\r\n                                required={true}\r\n                                className={classes.textField}\r\n                                value={form.Endereco.Complemento}\r\n                                onChange={e => {\r\n                                    var endereco = {\r\n                                        ...form.Endereco\r\n                                    };\r\n                                    endereco.Complemento = e.target.value;\r\n\r\n                                    setForm(\r\n                                    {\r\n                                        ...form,\r\n                                        Endereco: endereco\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                            />\r\n\r\n                            <Typography variant=\"h6\" gutterBottom className={classes.tituloCampos}>Informações da Conta</Typography>\r\n                            <TextField\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                required={true}\r\n                                className={classes.textField}\r\n                                type=\"email\"\r\n                                value={form.Email}\r\n                                onChange={e => setForm(\r\n                                    {\r\n                                        ...form,\r\n                                        Email: e.target.value\r\n                                    }\r\n                                )}\r\n                                name=\"email\"\r\n                                fullWidth\r\n                                autoComplete=\"email\"\r\n                                margin=\"normal\"\r\n                            />\r\n                            <TextField\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                required={true}\r\n                                className={classes.textField}\r\n                                value={form.Senha}\r\n                                onChange={e => setForm({\r\n                                    ...form,\r\n                                    Senha: e.target.value\r\n                                })}\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                margin=\"normal\"\r\n                            />\r\n                            <TextField\r\n                                id=\"confirm-password\"\r\n                                label=\"ConfirmPassword\"\r\n                                className={classes.textField}\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                margin=\"normal\"\r\n                            />\r\n                            <CardActions>\r\n                                <Box display=\"flex\" flexDirection=\"row-reverse\" width=\"100%\" m={1}>\r\n                                    <Box>\r\n                                        <Button variant=\"contained\" className={classes.button} onClick={() => history.push('/Login')}>\r\n                                        Cancelar\r\n                                        </Button>\r\n                                    </Box>\r\n                                    <Box>\r\n                                        <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\">\r\n                                        Cadastrar\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </CardActions>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"/\">Agenda Médica</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"/Home\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"/CadastrarHorarios\">Cadastrar</a>\r\n                    </li>                   \r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { FormContext } from '../CadastrarHorarios';\r\n\r\nexport default function HorarioSemana(props) {\r\n\r\n    const [horarios, setForm] = useContext(FormContext);\r\n    \r\n    var x = 0;\r\n\r\n    function deletarItem(tableId, elemId) {\r\n        let data = document.querySelector(`#${tableId} #${elemId}`);\r\n\r\n        \r\n        \r\n        // horarios.array.forEach(element => {\r\n        //     //eslint-disable-next-line\r\n        //     if(element.diaSemana == 1) return 1;\r\n        // });\r\n\r\n\r\n\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>{props.nome}</h4>\r\n            <div>\r\n                <table className=\"table table-borderless\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Início</th>\r\n                            <th>Término</th>\r\n                            <th>Ação</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody id={props.tableId}>\r\n                        {\r\n                            horarios.map(h => {                                \r\n                                if (h.diaSemana === props.id) {\r\n                                    let idItem = `item${x++}`;\r\n\r\n                                    return (\r\n                                        //eslint-disable-next-line\r\n                                        <tr id={idItem}>\r\n                                            <td>{x}</td>\r\n                                            <td>{h.horaInicio}</td>\r\n                                            <td>{h.horaFim}</td>\r\n                                            <td><button onClick={\r\n                                                e => {\r\n                                                    deletarItem(props.tableId, idItem)\r\n                                                    e.preventDefault();\r\n                                                }\r\n                                            }>Deletar</button></td>\r\n                                        </tr>\r\n                                    )\r\n                                } else {\r\n                                    return (<tr></tr>)\r\n                                }\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\r\nimport { showError } from '../../services/notifications'\r\nimport Header from './Components/Header/Index';\r\nimport HorarioSemana from './Components/HorarioSemana'\r\n\r\nexport const FormContext = React.createContext();\r\n\r\nexport default function CadastrarHorarios() {\r\n\r\n    const [form, setForm] = useState({\r\n        dataHoraInicio: new Date(),\r\n        dataHoraFim: new Date(),\r\n        horarios: [],\r\n        profissionalId: 10\r\n    })\r\n\r\n    function adicionarHorario(e) {\r\n\r\n        let existErro = false;\r\n\r\n        let horarioInicio = document.querySelector('#cadastrarHorario #horaInicio').value;\r\n        let horarioFim = document.querySelector('#cadastrarHorario #horaFim').value;\r\n\r\n        //Valida Horário\r\n        if (horarioInicio === \"\") {\r\n            showError('Horário de Início não pode ser vazio.');\r\n            existErro = true;\r\n        }\r\n\r\n        if (horarioFim === \"\") {\r\n            showError('Horário de Término não pode ser vazio.');\r\n            existErro = true;\r\n        }\r\n\r\n        if (horarioInicio > horarioFim) {\r\n            showError('Horário de fim deve ser maior que o inicial');\r\n            existErro = true;\r\n        }\r\n\r\n        //Pega o valor do select\r\n        var selectedOption = document.querySelector('#cadastrarHorario #selectDiaSemana').value;\r\n\r\n        // Verifica conflito de horário\r\n        form.horarios\r\n            .filter(horario => horario.diaSemana === selectedOption)\r\n            .forEach(n => {\r\n                if(horarioInicio > n.horaInicio && horarioInicio < n.horaFim)\r\n                {\r\n                    showError('Resolva o conflito de horário antes de adicionar um novo');\r\n                    existErro = true;\r\n                }\r\n            })\r\n\r\n        if (!existErro) {\r\n            let novo_horario = {\r\n                diaSemana: parseInt(selectedOption),\r\n                horaInicio: horarioInicio,\r\n                horaFim: horarioFim\r\n            }\r\n\r\n            form.horarios.push(novo_horario);\r\n\r\n            setForm(\r\n                {\r\n                    ...form,\r\n                    horarios: form.horarios\r\n                }\r\n            )            \r\n        }\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        console.log(JSON.stringify(form));\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div>\r\n                <h1>Cadastrar Jornada de Trabalho</h1>\r\n\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Nome: </label>\r\n                        <input type=\"text\" className=\"form-control\"></input>\r\n\r\n                        <label>Período de Vigência: </label>\r\n                        <DateRangePicker onChange={data =>\r\n                            setForm(\r\n                                {\r\n                                    ...form,\r\n                                    dataHoraInicio: data != null ? data[0] : new Date(),\r\n                                    dataHoraFim: data != null ? data[1] : new Date()\r\n                                }\r\n                            )\r\n                        }\r\n                            value={[form.dataHoraInicio, form.dataHoraFim]}\r\n                            minDate={new Date()}\r\n                        ></DateRangePicker>\r\n                    </div>\r\n\r\n                    <h2>Adicionar novos horários:</h2>\r\n\r\n                    <div id=\"cadastrarHorario\">\r\n                        <select id=\"selectDiaSemana\">\r\n                            <option value={1}>Segunda-Feira</option>\r\n                            <option value={2}>Terça-Feira</option>\r\n                            <option value={3}>Quarta-Feira</option>\r\n                            <option value={4}>Quinta-Feira</option>\r\n                            <option value={5}>Sexta-Feira</option>\r\n                            <option value={6}>Sábado</option>\r\n                            <option value={0}>Domingo</option>\r\n                        </select>\r\n\r\n                        <label>Horário de Início:</label>\r\n                        <input type=\"time\" id=\"horaInicio\" required={true}></input>\r\n                        <label>Horário de Término:</label>\r\n                        <input type=\"time\" id=\"horaFim\" required={true}></input>\r\n\r\n                        <button onClick={\r\n                            adicionarHorario\r\n                        }>Adicionar</button>\r\n                    </div>\r\n\r\n                    <FormContext.Provider value={[form.horarios, setForm]}>\r\n\r\n                        <div id=\"horariosTable\">\r\n                            <HorarioSemana tableId=\"table1\" id={1} nome=\"Segunda-Feira\" />\r\n\r\n                            <HorarioSemana tableId=\"table2\" id={2} nome=\"Terça-Feira\" />\r\n\r\n                            <HorarioSemana tableId=\"table3\" id={3} nome=\"Quarta-Feira\" />\r\n\r\n                            <HorarioSemana tableId=\"table4\" id={4} nome=\"Quinta-Feira\" />\r\n\r\n                            <HorarioSemana tableId=\"table5\" id={5} nome=\"Sexta-Feira\" />\r\n\r\n                            <HorarioSemana tableId=\"table6\" id={6} nome=\"Sábado\" />\r\n\r\n                            <HorarioSemana tableId=\"table0\" id={0} nome=\"Domingo\" />\r\n                        </div>\r\n\r\n                    </FormContext.Provider>\r\n\r\n                    <button onClick={handleSubmit}>Salvar</button>\r\n                    <button>Cancelar</button>\r\n                </form>\r\n            </div >\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport api from '../../services/api';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as Notifications from '../../services/notifications';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport CreditCardInput from 'react-credit-card-input';\r\nimport Axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    maxWidth: '350px'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    minWidth: 280,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n}));\r\n\r\nexport default function AgendarHorarioBuscaProfissional({ profissional }) {\r\n  const classes = useStyles();\r\n\r\n  const pag = {\r\n    DINHEIRO: 1,\r\n    BOLETO: 2,\r\n    CREDITO: 3\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedDate, setSelectedDate] = React.useState(null);\r\n  const [listaHorarios, setListaHorarios] = React.useState([]);\r\n  const [horario, setHorario] = React.useState({\r\n    horarioId: '',\r\n    Intervalo: '',\r\n  });\r\n  const [formaPagamento, setFormaPagamento] = React.useState(pag.DINHEIRO);\r\n  const [dadosPagamento, setDadosPagamento] = React.useState(\r\n    {\r\n      cardNumber: '',\r\n      expiry: '',\r\n      cvc: ''\r\n    }\r\n  );\r\n  const [especialidade, setEspecialidade] = React.useState({\r\n    especialidadeId: '',\r\n    intervalo: '',\r\n  });\r\n\r\n  function validatePagamento() {\r\n    return (formaPagamento !== pag.CREDITO) || (formaPagamento === pag.CREDITO && dadosPagamento.cvc && dadosPagamento.expiry && dadosPagamento.cardNumber);\r\n  }\r\n\r\n  function handleChangeHorario(event) {\r\n    setHorario(oldHorario => ({\r\n      ...oldHorario,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  }\r\n\r\n  function handleChangeEspecialidade(event) {\r\n    setEspecialidade(oldEspecialidade => ({\r\n      ...oldEspecialidade,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  }\r\n\r\n  async function handleDateChange(date) {\r\n    setSelectedDate(date);\r\n\r\n    const response = await api.get(\"/Agenda/HorariosPorData\", {\r\n      params: {\r\n        profissionalId: profissional.id,\r\n        data: date\r\n      }\r\n    });\r\n\r\n    if (response.status == 200) {\r\n      setListaHorarios(response.data);\r\n    } else {\r\n      Notifications.showError(\"Erro ao atualizar lista de Horários.\");\r\n    }\r\n  }\r\n\r\n  function handleChangePagamento(event) {\r\n    setFormaPagamento(event.target.value);\r\n\r\n    if (event.target.value !== pag.CREDITO)\r\n      setDadosPagamento({\r\n        cardNumber: '',\r\n        expiry: '',\r\n        cvc: ''\r\n      });\r\n  }\r\n\r\n  async function handleBoleto(e){\r\n    const axios = require('axios');\r\n\r\n    if ('cpfPayer') {\r\n        axios.get('https://sandbox.boletobancario.com/boletofacil/integration/api/v1/issue-charge',\r\n            { params:{\r\n                token: 'DBD36248D7E26F938D39AB344BD8C3EFF4BD1B1B07F929C7E7F080BBF1E269EF',\r\n                description: 'Agenda Medica - Pagamento Boleto',\r\n                amount: 50.00,\r\n                payerName: 'Lucas Erlacher',\r\n                payerCpfCnpj: '17025193763'\r\n            }\r\n            }\r\n        ).then(\r\n          function(response) {\r\n            console.log(response);\r\n            var response_boleto = response.data.data.charges[0];\r\n            window.open(response_boleto.link, '_blank');          \r\n          }\r\n        );\r\n        \r\n       \r\n    }\r\n    else {\r\n        alert('empty');\r\n    }\r\n}\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setHorario(oldHorario => ({\r\n      ...oldHorario,\r\n      'horarioId': '',\r\n    }));\r\n    setEspecialidade(oldEspecialidade => ({\r\n      ...oldEspecialidade,\r\n      'especialidadeId': '',\r\n    }));\r\n    setSelectedDate(null);\r\n    setDadosPagamento({\r\n      cardNumber: '',\r\n      expiry: '',\r\n      cvc: ''\r\n    });\r\n    setFormaPagamento(pag.DINHEIRO);\r\n  };\r\n\r\n  async function handleAgendar() {\r\n    if (!selectedDate || !horario.horarioId || !especialidade.especialidadeId || !validatePagamento()) {\r\n      Notifications.showError(\"É necessário preencher todos os campos!\");\r\n    } else {\r\n      const response = await api.post(\"/Consulta\",{\r\n        data: new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate()),\r\n        horaInicio: listaHorarios.filter(h => h.horarioId == horario.horarioId).pop().horaInicio,\r\n        horaFim: listaHorarios.filter(h => h.horarioId == horario.horarioId).pop().horaFim,\r\n        profissionalId: profissional.id,\r\n        especialidadeId: especialidade.especialidadeId,\r\n        tipoPagamento: formaPagamento,\r\n        cartao: (formaPagamento !== pag.CREDITO ? null : dadosPagamento)\r\n      });\r\n\r\n      if (response.status == 200) {\r\n        if (response.data.validationResult.isValid) {\r\n          handleClose();\r\n          Notifications.showSuccess(\"Horário agendado com sucesso!\");\r\n        } else {\r\n          response.data.validationResult.errors.forEach(function (error) {\r\n            Notifications.showError(error.errorMessage);\r\n          });\r\n        }\r\n      } else {\r\n        Notifications.showError(\"Erro '\" + response.status + \"'\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function renderEspecialidade(e) {\r\n    return <MenuItem key={e.especialidadeId} value={e.especialidadeId}>{e.nome}</MenuItem>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" size=\"small\" className={classes.button} onClick={handleOpen}>\r\n            <EventAvailableIcon className={classes.leftIcon} />\r\n            Agendar Horário\r\n        </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Agendamento de Horário</h2>\r\n            <p id=\"transition-modal-description\"><strong>Profissional</strong>: {profissional.nomeCompleto}</p>\r\n            <form autoComplete=\"off\" className={{flexGrow: 1}}>\r\n              <Grid container spacing={3} justify=\"center\">\r\n                <Grid item xs={12}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      id=\"date-picker-data-consulta\"\r\n                      className={classes.formControl}\r\n                      label=\"Data da Consulta\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      value={selectedDate}\r\n                      onChange={handleDateChange}\r\n                      KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"especialidade\">Especialidade</InputLabel>\r\n                    <Select\r\n                      value={especialidade.especialidadeId}\r\n                      onChange={handleChangeEspecialidade}\r\n                      displayEmpty\r\n                      inputProps={{\r\n                        name: 'especialidadeId',\r\n                        id: 'especialidade',\r\n                      }}\r\n                    >\r\n                      {profissional.especialidades.map(e => renderEspecialidade(e))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"horario\">Horário</InputLabel>\r\n                    <Select\r\n                      value={horario.horarioId}\r\n                      onChange={handleChangeHorario}\r\n                      displayEmpty\r\n                      inputProps={{\r\n                        name: 'horarioId',\r\n                        id: 'horario',\r\n                      }}\r\n                    >\r\n                      {\r\n                        listaHorarios.map(horario =>\r\n                          <MenuItem key={horario.horarioId} value={horario.horarioId}>De {horario.horaInicio} às {horario.horaFim}</MenuItem>\r\n                        )\r\n                      }\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"pagamento\">Forma de Pagamento</InputLabel>\r\n                    <Select\r\n                      value={formaPagamento}\r\n                      onChange={handleChangePagamento}\r\n                      displayEmpty\r\n                      inputProps={{\r\n                        name: 'pagamentoId',\r\n                        id: 'pagamento',\r\n                      }}\r\n                    >                                              \r\n                          <MenuItem key={pag.DINHEIRO} value={pag.DINHEIRO}>Dinheiro</MenuItem>                        \r\n                          <MenuItem key={pag.BOLETO} value={pag.BOLETO}>Boleto</MenuItem>                        \r\n                          <MenuItem key={pag.CREDITO} value={pag.CREDITO}>Crédito</MenuItem>                                              \r\n                    </Select>                    \r\n                  </FormControl>\r\n                </Grid>                \r\n                <Grid item xs={12} id=\"formaPagamento\">\r\n                  {(formaPagamento === pag.CREDITO) && (\r\n                    <CreditCardInput \r\n                    cardNumberInputProps={{ value: dadosPagamento.cardNumber, onChange: (e) => {\r\n                      setDadosPagamento({\r\n                        ...dadosPagamento,\r\n                        cardNumber: e.target.value\r\n                      })\r\n                    }}}\r\n                    cardExpiryInputProps={{ value: dadosPagamento.expiry, onChange: (e) => {\r\n                      setDadosPagamento({\r\n                        ...dadosPagamento,\r\n                        expiry: e.target.value\r\n                      })\r\n                    }}}\r\n                    cardCVCInputProps={{ value: dadosPagamento.cvc, onChange: (e) => {\r\n                      setDadosPagamento({\r\n                        ...dadosPagamento,\r\n                        cvc: e.target.value\r\n                      })\r\n                    }}}\r\n                    fieldClassName=\"input\"\r\n                    />\r\n                  )}                  \r\n                </Grid>\r\n                <Grid item xs={6}>  \r\n                {(formaPagamento === pag.BOLETO) &&\r\n                  (<Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleBoleto}>\r\n                    GERAR BOLETO\r\n                  </Button>)\r\n                }                \r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleAgendar}>\r\n                    Agendar\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Button variant=\"contained\" className={classes.button} onClick={handleClose}>\r\n                    Fechar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport AgendarHorarioBuscaProfissional from './AgendarHorarioBuscaProfissional';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    marginBottom: theme.spacing(1.5)\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  chip: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CardBuscaProfissionais(props) {\r\n  const classes = useStyles();\r\n  const profissionais = props.profissionais;\r\n\r\n  return (\r\n    profissionais.map(profissional => \r\n      <Card className={classes.card} key={profissional.id}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              {profissional.nomeCompleto.substring(0, 1)}\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <Grid container>\r\n              <Grid container justify=\"flex-end\" direction=\"row\">\r\n                <AgendarHorarioBuscaProfissional profissional={profissional} />\r\n              </Grid>\r\n              <Grid container justify=\"flex-end\" direction=\"row\">\r\n                <Button color=\"secondary\" size=\"small\"  className={classes.button}>\r\n                  <VisibilityIcon className={classes.leftIcon} />\r\n                  Visualizar Perfil\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n          title={profissional.nomeCompleto}\r\n          subheader={\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {profissional.endereco}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Rating size=\"small\" precision={0.5} value={profissional.avaliacao} readOnly />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                {profissional.especialidades && profissional.especialidades.map((especialidade, index) =>\r\n                  <Chip size=\"small\" label={especialidade.nome} className={classes.chip} key={especialidade.especialidadeId}/>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n        />\r\n      </Card>\r\n    )\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { logout } from '../services/auth';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openAccountMenu = Boolean(anchorEl);\r\n  const [openLeftMenu, setOpenLeftMenu] = React.useState(localStorage.getItem('leftMenuOpen') == 'true');\r\n\r\n  function handleMenu(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function handleDrawerOpen() {\r\n    setOpenLeftMenu(true);\r\n    localStorage.setItem('leftMenuOpen', 'true')\r\n  }\r\n\r\n  function handleDrawerClose() {\r\n    setOpenLeftMenu(false);\r\n    localStorage.setItem('leftMenuOpen', 'false')\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: openLeftMenu,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, openLeftMenu && classes.hide)}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {props.title}\r\n          </Typography>\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={openAccountMenu}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>Meu Perfil</MenuItem>\r\n              <MenuItem onClick={handleClose}>Configurações</MenuItem>\r\n              <MenuItem onClick={() => {\r\n                logout();\r\n                props.history.push('/Login');\r\n              }}>Sair</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={openLeftMenu}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        {props.listLeftMenu}\r\n        <Divider />\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: openLeftMenu,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {props.content}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport NavBar from '../NavBar.js';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nexport default function NavBarPaciente(props) {\r\n    return (\r\n        <NavBar\r\n            title=\"Paciente\"\r\n            history={props.history}\r\n            listLeftMenu={\r\n                <List>\r\n                    <ListItem button key='Minha Agenda' onClick={() => props.history.push('/ConsultasPaciente')}>\r\n                        <ListItemIcon>\r\n                        <EventNoteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='Minhas Consultas' />\r\n                    </ListItem>\r\n                    <ListItem button key='Procurar Profissionais' onClick={() => props.history.push('/BuscaProfissionais')}>\r\n                        <ListItemIcon>\r\n                        <SearchIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='Procurar Profissionais' />\r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            content={\r\n                props.content\r\n            }\r\n        />\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container'\r\nimport CardBuscaProfissionais from './CardBuscaProfissionais'\r\nimport api from '../../services/api';\r\nimport NavBarPaciente from './NavBarPaciente.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    // textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  formControl: {\r\n    minWidth: '100%',\r\n    textAlign: 'center',\r\n    fullWidth: true,\r\n  }\r\n}));\r\n\r\nexport default function BuscaProfissionais({ history }) {\r\n  const classes = useStyles();\r\n  const [profissionais, setProfissionais] = React.useState([]);\r\n  const [filtro, setFiltro] = React.useState({\r\n    nome: '',\r\n    EspecialidadesIds: []\r\n  });\r\n  const [especialidades, setEspecialidades] = React.useState([]);\r\n  const handleChangeEspecialidade = event => {\r\n    console.log('Selecionados, teóricamente: ', event.target.value);\r\n\r\n    setFiltro({\r\n      ...filtro,\r\n      EspecialidadesIds: event.target.value\r\n    });\r\n  };\r\n\r\n  function atualizaProfissionais() {\r\n    api.post('/User/Profissionais', filtro)\r\n      .then(response => {\r\n          console.log(response.data);\r\n          setProfissionais(response.data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    atualizaProfissionais();\r\n    api.get('/Especialidade')\r\n      .then(response => {\r\n          console.log(response.data);\r\n          setEspecialidades(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <NavBarPaciente\r\n      history={history}\r\n      content={\r\n          <div>\r\n            <CssBaseline />\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <Paper className={classes.paper}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                      <h3>Filtro</h3>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <TextField\r\n                        id=\"Nome\"\r\n                        className={classes.textField}\r\n                        label=\"Nome\"\r\n                        fullWidth\r\n                        onChange={event => {\r\n                          setFiltro({\r\n                            ...filtro,\r\n                            Nome: event.target.value\r\n                          });\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"especialidades-label\">Especialidades</InputLabel>\r\n                        <Select\r\n                          labelid=\"especialidades-label\"\r\n                          className={classes.formControl}\r\n                          id=\"especialidades\"\r\n                          multiple\r\n                          value={filtro.EspecialidadesIds}\r\n                          onChange={handleChangeEspecialidade}\r\n                          input={<Input />}\r\n                        >\r\n                          {especialidades.map(especialidade => (\r\n                            <MenuItem key={especialidade.especialidadeId} value={especialidade.especialidadeId}>\r\n                              {especialidade.nome}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={3} justify=\"flex-end\" alignContent=\"flex-end\">\r\n                    <Grid item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={event => {\r\n                          atualizaProfissionais();\r\n                        }}\r\n                      >\r\n                        <FilterListIcon /> Filtrar\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CardBuscaProfissionais profissionais={profissionais} />\r\n              </Grid>\r\n            </Grid>\r\n            {/* <Container maxWidth=\"xl\">\r\n            </Container> */}\r\n          </div>\r\n      }\r\n    />\r\n  )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default function ConfirmCancel(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n       <Tooltip title=\"Cancelar\">\r\n        <IconButton aria-label=\"cancelar\" size='small'>\r\n          <CancelIcon onClick={handleClickOpen} />\r\n        </IconButton>\r\n       </Tooltip>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.text}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            size=\"small\"\r\n            color=\"default\"\r\n          >\r\n            {props.labelCancel}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setOpen(false);\r\n              props.callBack(setOpen);\r\n            }}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            {props.labelAccept}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { forwardRef, useEffect }  from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ReactDOM from 'react-dom';\r\nimport Container from '@material-ui/core/Container';\r\nimport MaterialTable from 'material-table';\r\nimport api from '../../services/api';\r\nimport ConfirmCancel from '../../services/ConfirmCancel';\r\nimport * as Notifications from '../../services/notifications';\r\nimport {\r\n    FirstPage,\r\n    LastPage,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    ArrowUpward,\r\n    Cancel\r\n} from '@material-ui/icons';\r\nimport NavBarPaciente from './NavBarPaciente.js';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nconst tableIcons = {\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    Cancel: forwardRef((props, ref) => <Cancel {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    iconTableStatusPago: {\r\n        color: \"#4caf50\",\r\n    },\r\n    iconTableStatusNaoPago: {\r\n        color: \"#212121\",\r\n    },\r\n    dialogPaymentAction:{\r\n        justifyContent:'center',\r\n    }\r\n}));\r\n\r\nfunction TableConsultas({ consultas }) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            {\r\n                title: 'Especialidade',\r\n                field: 'especialidadeNome'\r\n            },\r\n            {\r\n                title: 'Profissional',\r\n                field: 'profissionalNome'\r\n            },\r\n            {\r\n                title: 'Endereço',\r\n                field: 'endereco'\r\n            },\r\n            {\r\n                title: 'Data',\r\n                field: 'data',\r\n                type: 'date'\r\n            },\r\n            {\r\n                title: 'Horário de Início',\r\n                field: 'horaInicio'\r\n            },\r\n            {\r\n                title: 'Horário de Fim',\r\n                field: 'horaFim',\r\n                type: 'time'\r\n            },\r\n            {\r\n                title: 'Status',\r\n                field: 'estado',\r\n                render: rowData => {\r\n                    var classNameStatus = rowData.pagamentoConfirmado ? classes.iconTableStatusPago : classes.iconTableStatusNaoPago;\r\n                    var titleComplementoPago = rowData.pagamentoConfirmado ? \" e paga\" : \"\";\r\n\r\n                    if (rowData.estado == 0) {\r\n                        return <Tooltip title={(\"Agendada\" + titleComplementoPago)}><DoneIcon className={classNameStatus} /></Tooltip>;\r\n                    } else if (rowData.estado == 1) {\r\n                        return <Tooltip title={(\"Realizada\" + titleComplementoPago)}><DoneAllIcon className={classNameStatus} /></Tooltip>;\r\n                    } else {\r\n                        return <Tooltip title={(\"Cancelada\" + titleComplementoPago)}><CloseIcon className={classNameStatus} /></Tooltip>;\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        data: consultas\r\n    });\r\n\r\n    return (\r\n        <MaterialTable\r\n            title=\"Consultas Agendadas\"\r\n            columns={state.columns}\r\n            data={state.data}\r\n            icons={tableIcons}\r\n            options={\r\n                {\r\n                    paging: false,\r\n                    search: false,\r\n                    actionsColumnIndex: -1\r\n                }\r\n            }\r\n            actions={[\r\n                rowData => ({\r\n                    icon: 'Cancel',\r\n                    tooltip: 'cancelar'\r\n                })\r\n            ]}\r\n            components={{\r\n                Action: rowData => {\r\n                    if (rowData.data.estado == '0') {\r\n                        return (\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <Pagamento\r\n                                        consulta={rowData.data}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <ConfirmCancel\r\n                                        title=\"Deseja cancelar a consulta?\"\r\n                                        text=\"Ao clicar em SIM, a consulta será cancelada.\"\r\n                                        labelCancel=\"Não\"\r\n                                        labelAccept=\"Sim\"\r\n                                        callBack={(setOpen)=> {\r\n                                            api.get('/Consulta/CancelarConsulta', {\r\n                                                params: {\r\n                                                    consultaId: rowData.data.consultaId\r\n                                                }\r\n                                            })\r\n                                                .then(response => {\r\n                                                    if (response.status == 200){\r\n                                                        if (response.data.validationResult.isValid) {\r\n                                                            const data = [...state.data];\r\n                                                            data[data.indexOf(rowData.data)].estado = response.data.estado;\r\n                                                            setState({ ...state, data });\r\n\r\n                                                            Notifications.showSuccess(\"Consulta cancelada com sucesso!\");\r\n                                                        } else {\r\n                                                            response.data.validationResult.errors.forEach(function (e) {\r\n                                                                Notifications.showError(e.errorMessage);\r\n                                                            })\r\n                                                        }\r\n                                                    }\r\n                                                    setOpen(false);\r\n                                                });\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        );\r\n                    }\r\n                    else {\r\n                        return (<p></p>);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nfunction Pagamento({ consulta }) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title=\"Pagar\">\r\n                <IconButton aria-label=\"cancelar\" size='small'>\r\n                    <PaymentIcon onClick={handleClickOpen} />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                onEntered={() => {\r\n                    window.renderButtonPaypal(\"paypal-button-container-\" + consulta.consultaId, 'sb-fegkl615996@personal.example.com', '25');\r\n                }}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">Pagar Consulta</DialogTitle>\r\n                <DialogActions className={classes.dialogPaymentAction}>\r\n                    <div id={(\"paypal-button-container-\" + consulta.consultaId)}></div>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function Consultas(props) {\r\n    api.get('/Consulta/ConsultasPaciente')\r\n        .then(response => {\r\n            ReactDOM.render(\r\n                <TableConsultas consultas={response.data} />,\r\n                document.getElementById('table-consultas')\r\n            );\r\n    });\r\n\r\n    return (\r\n        <NavBarPaciente\r\n            history={props.history}\r\n            content={\r\n                <Container maxWidth=\"xl\">\r\n                    <div id=\"table-consultas\"></div>\r\n                </Container>\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport NavBar from '../NavBar.js';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\n\r\nexport default function NavBarProfissional(props) {\r\n    return (\r\n        <NavBar\r\n            title=\"Profissional\"\r\n            history={props.history}\r\n            listLeftMenu={\r\n                <List>\r\n                    <ListItem\r\n                        button\r\n                        key='Consultas'\r\n                        onClick={\r\n                            () => props.history.push('/ConsultasProfissional')\r\n                        }\r\n                        >\r\n                        <ListItemIcon>\r\n                        <EventNoteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='Consultas' />\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        key='Gerenciar Agendas'\r\n                        onClick={\r\n                            () => props.history.push('/Agendas')\r\n                        }\r\n                    >\r\n                        <ListItemIcon>\r\n                        <DateRangeIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='Gerenciar Agendas' />\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        key='Relatório'\r\n                        onClick={\r\n                            () => props.history.push('/Relatorio')\r\n                        }\r\n                    >\r\n                        <ListItemIcon>\r\n                            <TrendingUpIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='Relatório' />\r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            content={\r\n                props.content\r\n            }\r\n        />\r\n    )\r\n}","import React, { forwardRef, useEffect }  from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport api from '../../services/api';\r\nimport * as Notifications from '../../services/notifications';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport NavBarProfissional from './NavBarProfissional.js';\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport '@fullcalendar/core/main.css'\r\nimport '@fullcalendar/daygrid/main.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    paperCalendar: {\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n    paperModal: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\n\r\nexport default function ConsultasProfissional(props) {\r\n    const classes = useStyles();\r\n    const [consultas, setConsultas] = React.useState([]);\r\n    const [openModal, setOpenModal] = React.useState({\r\n        open: false,\r\n        consultaId: -1\r\n    });\r\n\r\n  const handleOpenModal = (consultaId) => {\r\n    const consulta = consultas.find(consulta => consulta.consultaId == consultaId);\r\n    setOpenModal({\r\n        open: true,\r\n        consultaId: consultaId,\r\n        pacienteNome: consulta.pacienteNome,\r\n        especialidadeNome: consulta.especialidadeNome,\r\n        pacienteNome: consulta.pacienteNome,\r\n        cpf: consulta.cpf,\r\n        email: consulta.email,\r\n        phoneNumber: consulta.phoneNumber,\r\n        data: consulta.data,\r\n        pagamentoConfirmado: consulta.pagamentoConfirmado,\r\n        horaInicio: consulta.horaInicio,\r\n        horaFim: consulta.horaFim,\r\n        estado: consulta.estado\r\n    });\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal({\r\n        ...openModal,\r\n        open: false\r\n    });\r\n  };\r\n\r\n  function atualizarConsultas() {\r\n      api.get('/Consulta/ConsultasProfissional')\r\n          .then(response => {\r\n              setConsultas(response.data);\r\n      });\r\n  }\r\n\r\n    useEffect(() => {\r\n        atualizarConsultas();\r\n    }, [])\r\n\r\n    return (\r\n        <NavBarProfissional\r\n            history={props.history}\r\n            content={\r\n                <Container maxWidth=\"xl\">\r\n                    <Paper className={classes.paperCalendar}>\r\n                        <FullCalendar\r\n                            defaultView=\"dayGridWeek\"\r\n                            plugins={[ dayGridPlugin ]}\r\n                            weekends={true}\r\n                            header={{\r\n                                left: 'prev,next',\r\n                                center: 'title',\r\n                                right: 'dayGridDay,dayGridWeek,dayGridMonth'\r\n                            }}\r\n                            height={'auto'}\r\n                            editable={true}\r\n                            events={\r\n                                consultas.map((consulta) => {\r\n                                    return {\r\n                                        id: consulta.consultaId,\r\n                                        title: ((consulta.pagamentoConfirmado) ? \"[PAGO] \" : \"\") + consulta.pacienteNome,\r\n                                        start: consulta.dataHoraInicio,\r\n                                        end: consulta.dataHoraFim,\r\n                                        backgroundColor: (consulta.estado == 0 ? /* Agendada */ \"\" : (consulta.estado == 1 ? /* Realizada */ \"#757575\" : /* Cancelada */ \"#e0e0e0\"))\r\n                                    }\r\n                                })\r\n                            }\r\n                            eventTimeFormat={{\r\n                                hour: '2-digit',\r\n                                minute: '2-digit',\r\n                                meridiem: false\r\n                            }}\r\n                            eventClick={(info) => {\r\n                                handleOpenModal(info.event.id);\r\n                            }\r\n                            }\r\n                        />\r\n                    </Paper>\r\n                    <Modal\r\n                        className={classes.modal}\r\n                        open={openModal.open}\r\n                        onClose={handleCloseModal}\r\n                        closeAfterTransition\r\n                        BackdropComponent={Backdrop}\r\n                        BackdropProps={{\r\n                        timeout: 200,\r\n                        }}\r\n                    >\r\n                        <Fade in={openModal.open}>\r\n                            <div className={classes.paperModal}>\r\n                                <h2>Informações da Consulta</h2>\r\n                                <br />\r\n                                <p><strong>Especialidade</strong>: {openModal.especialidadeNome}</p>\r\n                                <p><strong>Paciente</strong>: {openModal.pacienteNome}</p>\r\n                                <p><strong>CPF</strong>: {openModal.cpf}</p>\r\n                                <p><strong>E-mail</strong>: {openModal.email}</p>\r\n                                <p><strong>Telefone</strong>: {openModal.phoneNumber}</p>\r\n                                <p><strong>Data</strong>: {openModal.data}</p>\r\n                                <p><strong>Horario de Início</strong>: {openModal.horaInicio}</p>\r\n                                <p><strong>Horario de Fim</strong>: {openModal.horaFim}</p>\r\n                                <p><strong>Estado</strong>: {(openModal.estado == 0) ? \"Agendada\" : (openModal.estado == 1 ? \"Realizada\" : \"Cancelada\")}</p>\r\n                                <p><strong>Pagamento</strong>: {(openModal.pagamentoConfirmado) ? \"Pago\" : \"Não Pago\"}</p>\r\n                                <br />\r\n                                {openModal.estado !== 2 && !openModal.pagamentoConfirmado && (\r\n                                    <Box width=\"100%\" display=\"flex\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            right=\"true\"\r\n                                            fullWidth\r\n                                            onClick={() => {\r\n                                                api.get('/Consulta/ConfirmarPagamento', {\r\n                                                    params: {\r\n                                                        consultaId: openModal.consultaId\r\n                                                    }\r\n                                                })\r\n                                                    .then(response => {\r\n                                                        if (response.status == 200){\r\n                                                            if (response.data.validationResult.isValid) {\r\n                                                                Notifications.showSuccess(\"Pagamento da consulta confirmado com sucesso!\");\r\n                                                            } else {\r\n                                                                response.data.validationResult.errors.forEach(function (e) {\r\n                                                                    Notifications.showError(e.errorMessage);\r\n                                                                })\r\n                                                            }\r\n                                                        }\r\n                                                        handleCloseModal();\r\n                                                        atualizarConsultas();\r\n                                                    });\r\n                                            }}>\r\n                                            Confirmar Pagamento\r\n                                        </Button>\r\n                                    </Box>\r\n                                )}\r\n                                {(openModal.estado == 0) && (\r\n                                    <div>\r\n                                        <Box width=\"100%\" display=\"flex\">\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                className={classes.button}\r\n                                                right=\"true\"\r\n                                                fullWidth\r\n                                                onClick={() => {\r\n                                                    api.get('/Consulta/RealizarConsulta', {\r\n                                                        params: {\r\n                                                            consultaId: openModal.consultaId\r\n                                                        }\r\n                                                    })\r\n                                                        .then(response => {\r\n                                                            if (response.status == 200){\r\n                                                                if (response.data.validationResult.isValid) {\r\n                                                                    Notifications.showSuccess(\"Consulta marcada como realizada com sucesso!\");\r\n                                                                } else {\r\n                                                                    response.data.validationResult.errors.forEach(function (e) {\r\n                                                                        Notifications.showError(e.errorMessage);\r\n                                                                    })\r\n                                                                }\r\n                                                            }\r\n                                                            handleCloseModal();\r\n                                                            atualizarConsultas();\r\n                                                        });\r\n                                                }}>\r\n                                                Marcar como Realizada\r\n                                            </Button>\r\n                                        </Box>\r\n                                        <Box width=\"100%\" display=\"flex\">\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"default\"\r\n                                                className={classes.button}\r\n                                                right=\"true\"\r\n                                                fullWidth\r\n                                                onClick={() => {\r\n                                                    api.get('/Consulta/CancelarConsulta', {\r\n                                                        params: {\r\n                                                            consultaId: openModal.consultaId\r\n                                                        }\r\n                                                    })\r\n                                                        .then(response => {\r\n                                                            if (response.status == 200){\r\n                                                                if (response.data.validationResult.isValid) {\r\n                                                                    Notifications.showSuccess(\"Consulta cancelada com sucesso!\");\r\n                                                                } else {\r\n                                                                    response.data.validationResult.errors.forEach(function (e) {\r\n                                                                        Notifications.showError(e.errorMessage);\r\n                                                                    })\r\n                                                                }\r\n                                                            }\r\n                                                            handleCloseModal();\r\n                                                            atualizarConsultas();\r\n                                                        });\r\n                                                }}>\r\n                                                Cancelar\r\n                                            </Button>\r\n                                        </Box>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Fade>\r\n                    </Modal>\r\n                </Container>\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as Notifications from '../../services/notifications';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    maxWidth: '500px'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  fab: {\r\n        position: \"fixed\",\r\n        margin: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(6)\r\n    },\r\n}));\r\n\r\nexport default function AdicionarHorario({ callBackAdicionar }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedDiaSemana, setSelectedDiaSemana] = React.useState('');\r\n  const [selectedHorarioInicio, setSelectedHorarioInicio] = React.useState(null);\r\n  const [selectedHorarioFim, setSelectedHorarioFim] = React.useState(null);\r\n  const listaDiasSemana = [\r\n      \"Domingo\",\r\n      \"Segunda-Feira\",\r\n      \"Terça-Feira\",\r\n      \"Quarta-Feira\",\r\n      \"Quinta-Feira\",\r\n      \"Sexta-Feira\",\r\n      \"Sábado\"\r\n  ];\r\n\r\n  function handleChangeDiaSemana(event) {\r\n    setSelectedDiaSemana(event.target.value);\r\n  }\r\n\r\n  function handleHorarioInicioChange(horarioInicio) {\r\n    setSelectedHorarioInicio(horarioInicio);\r\n  }\r\n\r\n  function handleHorarioFimChange(horarioFim) {\r\n    setSelectedHorarioFim(horarioFim);\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAdicionar = () => {\r\n    function pad(num) {\r\n      var s = \"0\" + num;\r\n      return s.substr(s.length-2);\r\n    }\r\n\r\n    if ((selectedDiaSemana === '') || !selectedHorarioInicio || !selectedHorarioFim) {\r\n        Notifications.showError(\"Preencha todos os campos.\");\r\n    } else {\r\n        callBackAdicionar({\r\n            horarioId : 0,\r\n            diaSemana: selectedDiaSemana,\r\n            horaInicio: pad(selectedHorarioInicio.getHours()) + \":\" + pad(selectedHorarioInicio.getMinutes()),\r\n            horaFim: pad(selectedHorarioFim.getHours()) + \":\" + pad(selectedHorarioFim.getMinutes())\r\n        });\r\n        \r\n        Notifications.showSuccess(\"Horário adicionado com sucesso!\");\r\n\r\n        setSelectedHorarioInicio(null);\r\n        setSelectedHorarioFim(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Button variant=\"contained\" className={classes.button} onClick={handleOpen}>\r\n            Adicionar Horário\r\n        </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Novo Horário</h2>\r\n            <br />\r\n            <form autoComplete=\"off\" className={{flexGrow: 1}}>\r\n              <Grid container spacing={3} justify=\"center\">\r\n                <Grid item xs={12}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel htmlFor=\"diaSemana\">Dia da Semana</InputLabel>\r\n                        <Select\r\n                            value={selectedDiaSemana}\r\n                            fullWidth\r\n                            onChange={handleChangeDiaSemana}\r\n                            displayEmpty\r\n                            required\r\n                        >\r\n                        {listaDiasSemana.map((e, i) => \r\n                                <MenuItem key={i} value={i}>{e}</MenuItem>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardTimePicker\r\n                        fullWidth\r\n                        id=\"time-picker-inicio\"\r\n                        label=\"Início\"\r\n                        value={selectedHorarioInicio}\r\n                        onChange={handleHorarioInicioChange}\r\n                        required\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change time',\r\n                        }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardTimePicker\r\n                        fullWidth\r\n                        id=\"time-picker-fim\"\r\n                        label=\"Fim\"\r\n                        value={selectedHorarioFim}\r\n                        onChange={handleHorarioFimChange}\r\n                        required\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change time',\r\n                        }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.button} onClick={handleAdicionar}>\r\n                    Adicionar e Limpar Campos\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Button variant=\"contained\" size=\"medium\" className={classes.button} onClick={handleClose}>\r\n                    Fechar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport NavBarProfissional from './NavBarProfissional.js';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AdicionarHorario from './AdicionarHorario';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport * as Notifications from '../../services/notifications';\r\nimport api from '../../services/api';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport NumberFormat from 'react-number-format';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    saveButton: {\r\n        position: \"fixed\",\r\n        margin: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(17)\r\n    },\r\n    closeButton: {\r\n        position: \"fixed\",\r\n        margin: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(6)\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator=\".\"\r\n            decimalSeparator=\",\"\r\n            isNumericString\r\n            prefix=\"R$ \"\r\n        />\r\n    );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction FormularioAgenda(props) {\r\n    const classes = useStyles();\r\n    const diasSemana = [\r\n        \"Domingo\",\r\n        \"Segunda-Feira\",\r\n        \"Terça-Feira\",\r\n        \"Quarta-Feira\",\r\n        \"Quinta-Feira\",\r\n        \"Sexta-Feira\",\r\n        \"Sábado\"\r\n    ];\r\n    const [horarios, setHorarios] = React.useState([]);\r\n    const [dataInicio, setDataInicio] = React.useState(null);\r\n    const [dataFim, setDataFim] = React.useState(null);\r\n    const [titulo, setTitulo] = React.useState('');\r\n    const [precoConsulta, setPrecoConsulta] = React.useState('');\r\n    const agendaId = props.match.params.agendaId;\r\n\r\n    useEffect(() => {\r\n        if (agendaId) {\r\n            api.get('/Agenda?agendaId=' + agendaId)\r\n                .then(response => {\r\n                    setHorarios(response.data.horarios);\r\n                    setDataInicio(response.data.dataHoraInicio);\r\n                    setDataFim(response.data.dataHoraFim);\r\n                    setTitulo(response.data.titulo);\r\n                    setPrecoConsulta(response.data.precoConsulta);\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    async function SalvarAgenda() {\r\n        const response = await api.post('/Agenda',\r\n        {\r\n            agendaId,\r\n            titulo,\r\n            dataHoraInicio: dataInicio,\r\n            dataHoraFim: dataFim,\r\n            precoConsulta,\r\n            horarios\r\n        });\r\n\r\n        if (response.data.validationResult.isValid) {\r\n            Notifications.showSuccess(\"Agenda salva/alterada com sucesso!\");\r\n            props.history.push('/Agendas');            \r\n        } else {\r\n            response.data.validationResult.errors.forEach(function (error) {\r\n                Notifications.showError(error.errorMessage);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"xl\">\r\n                <Box mb={5}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography variant=\"h5\" component=\"h6\">Agenda</Typography>\r\n                        <br />\r\n                        <form noValidate autoComplete=\"off\" >\r\n                            <Grid container spacing={3} justify=\"flex-start\" direction=\"row\">\r\n                                <Grid item xs={6}>\r\n                                    <TextField\r\n                                        id=\"titulo\"\r\n                                        label=\"Título\"\r\n                                        width=\"100%\"\r\n                                        fullWidth\r\n                                        value={titulo}\r\n                                        onChange={(t) => setTitulo(t.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    \r\n                                    <TextField\r\n                                        id=\"precoConsulta\"\r\n                                        label=\"Preço da Consulta\"\r\n                                        width=\"100%\"\r\n                                        fullWidth\r\n                                        InputProps={{\r\n                                            inputComponent: NumberFormatCustom,\r\n                                        }}\r\n                                        value={precoConsulta}\r\n                                        onChange={(t) => setPrecoConsulta(t.target.value)}\r\n                                    />\r\n\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker\r\n                                            id=\"date-picker-data-inicio-vigencia\"\r\n                                            label=\"Início da Vigência\"\r\n                                            format=\"MM/dd/yyyy\"\r\n                                            fullWidth\r\n                                            value={dataInicio}\r\n                                            onChange={(data) => {\r\n                                                if (data != null) {\r\n                                                    data = new Date(data.getFullYear(), data.getMonth(), data.getDate());\r\n                                                }\r\n                                                setDataInicio(data);\r\n                                            }}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker\r\n                                            id=\"date-picker-data-fim-vigencia\"\r\n                                            label=\"Fim da Vigência\"\r\n                                            format=\"MM/dd/yyyy\"\r\n                                            fullWidth\r\n                                            value={dataFim}\r\n                                            onChange={(data) => {\r\n                                                if (data != null) {\r\n                                                    data = new Date(data.getFullYear(), data.getMonth(), data.getDate());\r\n                                                }\r\n                                                setDataFim(data);\r\n                                            }}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                                        <AdicionarHorario callBackAdicionar={(h) => {\r\n                                            var novosHorarios = horarios.slice();\r\n                                            novosHorarios.push(h);\r\n                                            setHorarios(old => novosHorarios);\r\n                                        }}/>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Paper>\r\n                </Box>\r\n            </Container>\r\n            <Container maxWidth=\"xl\">\r\n                <Box width=\"100%\" height={100} display=\"flex\" alignItems=\"flex-start\">\r\n                    {diasSemana.map((diaSemana, index) => \r\n                        <Box width={1 / diasSemana.length} p={1} display=\"inline-block\" maxHeight={5} key={index}>\r\n                            <List subheader={<ListSubheader>{diaSemana}</ListSubheader>} className={classes.root} bgcolor=\"background.paper\">\r\n                                {horarios.filter(h => h.diaSemana == index)\r\n                                    .map((h, indexHorario) => \r\n                                        <ListItem key={indexHorario}>\r\n                                            <ListItemText id={h.horarioId} primary={\"De \" + h.horaInicio + \" às \" + h.horaFim} />\r\n                                            <ListItemSecondaryAction>\r\n                                                <IconButton\r\n                                                    edge=\"end\"\r\n                                                    aria-label=\"delete\"\r\n                                                    onClick={() => {\r\n                                                        setHorarios(horarios.filter(horario => horario != h));\r\n                                                    }}\r\n                                                >\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            </ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                    )}\r\n                            </List>\r\n                        </Box>\r\n                    )}\r\n                </Box>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.saveButton}\r\n                    onClick={SalvarAgenda}\r\n                >\r\n                    <SaveIcon className={clsx(classes.leftIcon, classes.iconSmall)} />\r\n                    &nbsp;\r\n                    Salvar\r\n                </Button>\r\n                <Button variant=\"contained\" size=\"small\" className={classes.closeButton} onClick={() => props.history.push('/Agendas')}>\r\n                    Fechar\r\n                </Button>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function GerenciamentoAgenda(props) {\r\n    return (\r\n        <NavBarProfissional\r\n            history={props.history}\r\n            content={\r\n                <FormularioAgenda\r\n                    history={props.history}\r\n                    match={props.match}\r\n                />\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React, { forwardRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport MaterialTable from 'material-table';\r\nimport {\r\n    ArrowUpward,\r\n    Delete,\r\n    Edit\r\n} from '@material-ui/icons';\r\nimport NavBarProfissional from './NavBarProfissional.js';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport api from '../../services/api';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Notifications from '../../services/notifications';\r\n\r\n\r\nconst tableIcons = {\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    fab: {\r\n        position: \"fixed\",\r\n        margin: theme.spacing(1),\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(6)\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction TableAgendas({history, agendas}) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            { title: 'Título', field: 'titulo' },\r\n            { title: 'Início', field: 'dataHoraInicio' },\r\n            { title: 'Fim', field: 'dataHoraFim' }\r\n        ],\r\n        data: agendas\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <MaterialTable\r\n                title=\"Agendas\"\r\n                icons={tableIcons}\r\n                options={\r\n                    {\r\n                        paging: false,\r\n                        search: false,\r\n                        actionsColumnIndex: -1\r\n                    }\r\n                }\r\n                columns={state.columns}\r\n                data={state.data}\r\n                actions={[\r\n                    {\r\n                        icon: () => <Edit />,\r\n                        onClick: (event, rowData) => history.push('/GerenciamentoAgenda/' + rowData.agendaId)\r\n                    },\r\n                    {\r\n                        icon: () => <Delete />,\r\n                        onClick: (event, rowData) => {\r\n                            api.get('/Agenda/Delete?agendaId=' + rowData.agendaId)\r\n                                .then(response => {\r\n                                    if (response.data.sucesso){\r\n                                        console.log(rowData.data);\r\n                                        const data = [...state.data];\r\n                                        data.splice(data.indexOf(rowData.data), 1);\r\n                                        setState({ ...state, data });\r\n                                        Notifications.showSuccess(\"Agenda deletada com sucesso!\");\r\n                                    }\r\n                                });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={() => history.push('/GerenciamentoAgenda')}>\r\n                <AddIcon />\r\n            </Fab>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function Agendas(props) {\r\n    api.get('/Agenda/Agendas')\r\n        .then(response => {\r\n            console.log('RESPONSE: ', response);\r\n\r\n            ReactDOM.render(\r\n                <TableAgendas history={props.history} agendas={response.data} />,\r\n                document.getElementById('table-consultas')\r\n            );\r\n    });\r\n\r\n    return (\r\n        <NavBarProfissional\r\n            history={props.history}\r\n            content={\r\n                <Container maxWidth=\"lg\">\r\n                    <div id=\"table-consultas\">\r\n                        \r\n                    </div>\r\n                </Container>\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NavBarProfissional from './NavBarProfissional.js';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {\r\n    ResponsiveContainer, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend\r\n} from 'recharts';\r\nimport { randomColor } from 'randomcolor';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport * as Notifications from '../../services/notifications';\r\nimport api from '../../services/api';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\n\r\nfunction getEspecialidades(consultasTotais) {\r\n    var especialidadesArray = [];\r\n    consultasTotais.forEach(consultas => \r\n        especialidadesArray = especialidadesArray.concat(Object.keys(consultas).filter(prop => prop != \"Mes\"))\r\n    );\r\n    return Array.from(new Set(especialidadesArray));\r\n}\r\n\r\nexport default function Relatorio(props) {\r\n    const classes = useStyles();\r\n    const [ano, setAno] = React.useState(new Date().getFullYear());\r\n    const [mes, setMes] = React.useState(new Date().getMonth());\r\n    const [consultasAno, setConsultasAno] = React.useState([]);\r\n    const [consultasMes, setConsultasMes] = React.useState([]);\r\n    const especialidades = getEspecialidades(consultasAno);\r\n\r\n    function buscaConsultasAno(ano) {\r\n        api.get('Consulta/RelatorioConsultasAno?ano=' + ano)\r\n            .then(response => {\r\n                setConsultasAno(response.data);\r\n        });\r\n    }\r\n\r\n    function buscaConsultasMes(ano, mes) {\r\n        api.get('Consulta/RelatorioConsultasMes?ano=' + ano + '&mes=' + (mes + 1))\r\n            .then(response => {\r\n                setConsultasMes(response.data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        buscaConsultasAno(ano);\r\n        buscaConsultasMes(ano, mes);\r\n    }, [])\r\n\r\n    return (\r\n        <NavBarProfissional\r\n            history={props.history}\r\n            content={\r\n                <Container maxWidth=\"xl\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <Paper className={classes.paper}>\r\n                                <Grid container spacing={3}>\r\n                                    {/* Select - Ano */}\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl className={classes.formControl}>\r\n                                            <InputLabel htmlFor=\"ano\">Ano</InputLabel>\r\n                                            <Select\r\n                                                value={ano}\r\n                                                onChange={event => {\r\n                                                    setAno(event.target.value);\r\n                                                    buscaConsultasAno(event.target.value);\r\n                                                    buscaConsultasMes(event.target.value, mes);\r\n                                                }}\r\n                                                inputProps={{\r\n                                                    name: 'ano',\r\n                                                    id: 'ano',\r\n                                                }}\r\n                                            >\r\n                                                <MenuItem value={2018}>2018</MenuItem>\r\n                                                <MenuItem value={2019}>2019</MenuItem>\r\n                                                <MenuItem value={2020}>2020</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <ResponsiveContainer height={400}>\r\n                                            <BarChart\r\n                                                data={consultasAno}\r\n                                                margin={{\r\n                                                    top: 5, right: 30, left: 20, bottom: 5,\r\n                                                }}\r\n                                            >\r\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                                <XAxis dataKey=\"Mes\" />\r\n                                                <YAxis />\r\n                                                <Tooltip />\r\n                                                <Legend />\r\n                                                {especialidades.map((especialidade, index) => \r\n                                                    <Bar dataKey={especialidade} stackId=\"totalConsultas\" fill={randomColor({seed: especialidade})} />\r\n                                                )}\r\n                                            </BarChart>\r\n                                        </ResponsiveContainer>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Paper className={classes.paper}>\r\n                                <Grid container spacing={3}>\r\n                                    {/* Select - Mês */}\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl className={classes.formControl}>\r\n                                            <InputLabel htmlFor=\"mes\">Mês</InputLabel>\r\n                                            <Select\r\n                                                value={mes}\r\n                                                onChange={event => {\r\n                                                    setMes(event.target.value);\r\n                                                    buscaConsultasMes(ano, event.target.value);\r\n                                                }}\r\n                                                inputProps={{\r\n                                                    name: 'mes',\r\n                                                    id: 'mes',\r\n                                                }}\r\n                                            >\r\n                                                <MenuItem value={0}>Janeiro</MenuItem>\r\n                                                <MenuItem value={1}>Fevereiro</MenuItem>\r\n                                                <MenuItem value={2}>Março</MenuItem>\r\n                                                <MenuItem value={3}>Abril</MenuItem>\r\n                                                <MenuItem value={4}>Maio</MenuItem>\r\n                                                <MenuItem value={5}>Junho</MenuItem>\r\n                                                <MenuItem value={6}>Julho</MenuItem>\r\n                                                <MenuItem value={7}>Agosto</MenuItem>\r\n                                                <MenuItem value={8}>Setembro</MenuItem>\r\n                                                <MenuItem value={9}>Outubro</MenuItem>\r\n                                                <MenuItem value={10}>Novembro</MenuItem>\r\n                                                <MenuItem value={11}>Dezembro</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <ResponsiveContainer height={400}>\r\n                                            <BarChart\r\n                                                data={consultasMes}\r\n                                                margin={{\r\n                                                    top: 5, right: 30, left: 20, bottom: 5,\r\n                                                }}\r\n                                            >\r\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                                <XAxis dataKey=\"Dia\" tick={({ x, y, payload }) =>\r\n                                                    <g transform={`translate(${x},${y})`}>\r\n                                                        <text x={0} y={0} dy={16} textAnchor=\"end\" fill=\"#666\">{new Date(payload.value).getDate()}</text>\r\n                                                    </g>\r\n                                                } />\r\n                                                <YAxis />\r\n                                                <Tooltip\r\n                                                    labelFormatter={(value) => ( new Date(value).toLocaleDateString() )}\r\n                                                />\r\n                                                <Legend />\r\n                                                {especialidades.map((especialidade, index) => \r\n                                                    <Bar dataKey={especialidade} stackId=\"totalConsultas\" fill={randomColor({seed: especialidade})} />\r\n                                                )}\r\n                                            </BarChart>\r\n                                        </ResponsiveContainer>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                Tabela do Relatório\r\n                            </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport api from '../services/api';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport * as Notifications from '../services/notifications';\r\n\r\nexport default function AgendamentoHorario({ history }) {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const profissional = {\r\n      Nome: 'Fulano',\r\n      SobreNome: ' de Tal'\r\n  };\r\n\r\n  const especialidade = {\r\n      Nome: 'Clínico Geral'\r\n  };\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const response = await api.post('/User/Login',\r\n      {\r\n        email,\r\n      });\r\n\r\n    history.push('/Home');\r\n  }\r\n\r\n  return (\r\n    <div className=\"container h-100\">\r\n        <div className=\"d-flex bd-highlight pt-5 justify-content-center\">\r\n            <h2>Agendamento de Horario</h2>\r\n        </div>\r\n        <div className=\"d-flex bd-highlight justify-content-center\">\r\n            <p><strong>Especialidade:</strong> {especialidade.Nome}</p>\r\n        </div>\r\n        <div className=\"d-flex bd-highlight justify-content-center\">\r\n            <p><strong>Especialidade:</strong> {especialidade.Nome}</p>\r\n        </div>\r\n\r\n        <hr />\r\n        <form>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-1\">\r\n                    <label htmlFor=\"data\">Data</label>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <DatePicker className=\"form-control\" selected={startDate} onChange={date => setStartDate(date)} id=\"data\" style={{width: '100%'}} />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-1\">\r\n                    <label htmlFor=\"horario\">Horário</label>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <select className=\"custom-select my-1 mr-sm-2\" id=\"horario\">\r\n                        <option defaultValue>Choose...</option>\r\n                        <option value=\"1\">One</option>\r\n                        <option value=\"2\">Two</option>\r\n                        <option value=\"3\">Three</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport NavBar from '../NavBar.js';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\n\r\nexport default function NavBarAdmin(props) {\r\n    return (\r\n        <NavBar\r\n            title=\"Admin\"\r\n            history={props.history}\r\n            listLeftMenu={\r\n                <List>\r\n                    <ListItem button key='Especialidades' onClick={() => props.history.push('/Especialidades')}>\r\n                        <ListItemIcon>\r\n                            <ListIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='Especialidades' />\r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            content={\r\n                props.content\r\n            }\r\n        />\r\n    )\r\n}","import React, { forwardRef, useEffect }  from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport api from '../../services/api';\r\nimport NavBarAdmin from './NavBarAdmin.js';\r\nimport MaterialTable from 'material-table';\r\nimport * as Notifications from '../../services/notifications';\r\nimport {\r\n    FirstPage,\r\n    LastPage,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    ArrowUpward,\r\n    Add,\r\n    Save,\r\n    Delete,\r\n    Check,\r\n    Clear,\r\n    Edit\r\n} from '@material-ui/icons';\r\n\r\n\r\nconst tableIcons = {\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    Add: forwardRef((props, ref) => <Add {...props} ref={ref} />),\r\n    Save: forwardRef((props, ref) => <Save {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <Delete {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />)\r\n};\r\n\r\nexport default function Especialidades(props) {\r\n    var [especialidades, setEspecialidades ] = React.useState([]);\r\n\r\n    function fetchEspecialidades() {\r\n        api.get('/Especialidade')\r\n            .then(response => {\r\n                setEspecialidades(response.data);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEspecialidades();\r\n    }, []);\r\n\r\n    return (\r\n        <NavBarAdmin\r\n            history={props.history}\r\n            content={\r\n                <Container maxWidth=\"lg\">\r\n                    <MaterialTable\r\n                        title=\"Especialidades\"\r\n                        columns={[\r\n                            { title: 'Especialidade', field: 'nome' },\r\n                            { title: 'Código', field: 'codigo' },\r\n                        ]}\r\n                        data={especialidades}\r\n                        icons={tableIcons}\r\n                        options={\r\n                            {\r\n                                paging: false,\r\n                                search: false,\r\n                                actionsColumnIndex: -1\r\n                            }\r\n                        }\r\n                        editable={{\r\n                            onRowAdd: newData =>\r\n                                api.post('/Especialidade', newData)\r\n                                    .then(response => {\r\n                                        if (response.status == 200){\r\n                                            if (response.data.validationResult.isValid) {\r\n                                                Notifications.showSuccess(\"Consulta cancelada com sucesso!\");\r\n                                                fetchEspecialidades();\r\n                                            } else {\r\n                                                response.data.validationResult.errors.forEach(function (e) {\r\n                                                    Notifications.showError(e.errorMessage);\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                    }),\r\n                            onRowUpdate: (newData, oldData) =>\r\n                                api.post('/Especialidade', newData)\r\n                                    .then(response => {\r\n                                        if (response.status == 200){\r\n                                            if (response.data.validationResult.isValid) {\r\n                                                Notifications.showSuccess(\"Consulta cancelada com sucesso!\");\r\n                                                fetchEspecialidades();\r\n                                            } else {\r\n                                                response.data.validationResult.errors.forEach(function (e) {\r\n                                                    Notifications.showError(e.errorMessage);\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                    }),\r\n                            onRowDelete: oldData =>\r\n                              new Promise((resolve, reject) => {\r\n                                setTimeout(() => {\r\n                                  {\r\n                                    const index = especialidades.indexOf(oldData);\r\n                                    especialidades.splice(index, 1);\r\n                                    setEspecialidades(especialidades);\r\n                                  }\r\n                                  resolve()\r\n                                }, 1000)\r\n                              }),\r\n                        }}\r\n                    />\r\n                </Container>\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { isAuthenticated } from \"./services/auth\";\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/Login\";\r\nimport Cadastrar from \"./pages/Cadastrar\";\r\nimport CadastrarHorarios from \"./pages/Profissional/CadastrarHorarios\";\r\nimport BuscaProfissionais from \"./pages/Paciente/BuscaProfissionais\";\r\nimport Consultas from \"./pages/Paciente/Consultas\";\r\nimport ConsultasProfissional from \"./pages/Profissional/ConsultasProfissional\";\r\nimport GerenciamentoAgenda from \"./pages/Profissional/GerenciamentoAgenda\";\r\nimport Agendas from \"./pages/Profissional/Agendas\";\r\nimport Relatorio from \"./pages/Profissional/Relatorio\";\r\nimport AgendamentoHorario from \"./pages/AgendamentoHorario\";\r\n// import pacienteConsultas from './pages/pacienteConsultas'\r\nimport Especialidades from \"./pages/Admin/Especialidades\";\r\n\r\nconst PrivateRoute = ({ component: Component, tipoUsuario, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated() &&\r\n      (!tipoUsuario ||\r\n        (tipoUsuario &&\r\n          localStorage.getItem(\"TIPO_USUARIO\") == tipoUsuario)) ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: process.env.PUBLIC_URL + \"/\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login}></Route>\r\n        <Route path=\"/Login\" component={Login}></Route>\r\n        <Route path=\"/Cadastrar\" component={Cadastrar}></Route>\r\n        <PrivateRoute\r\n          path=\"/ConsultasPaciente\"\r\n          component={Consultas}\r\n          tipoUsuario=\"0\"\r\n        ></PrivateRoute>\r\n        <Route\r\n          path=\"/ConsultasProfissional\"\r\n          component={ConsultasProfissional}\r\n          tipoUsuario=\"1\"\r\n        ></Route>\r\n        <PrivateRoute\r\n          path=\"/GerenciamentoAgenda\"\r\n          exact\r\n          component={GerenciamentoAgenda}\r\n          tipoUsuario=\"1\"\r\n        ></PrivateRoute>\r\n        <PrivateRoute\r\n          path=\"/GerenciamentoAgenda/:agendaId\"\r\n          component={GerenciamentoAgenda}\r\n          tipoUsuario=\"1\"\r\n        ></PrivateRoute>\r\n        <PrivateRoute\r\n          path=\"/Agendas\"\r\n          component={Agendas}\r\n          tipoUsuario=\"1\"\r\n        ></PrivateRoute>\r\n        <Route\r\n          path=\"/BuscaProfissionais\"\r\n          component={BuscaProfissionais}\r\n          tipoUsuario=\"0\"\r\n        ></Route>\r\n        <Route\r\n          path=\"/CadastrarHorarios\"\r\n          component={CadastrarHorarios}\r\n          tipoUsuario=\"1\"\r\n        ></Route>\r\n        <Route path=\"/AgendamentoHorario\" component={AgendamentoHorario} />\r\n        <Route path=\"/Relatorio\" component={Relatorio} />\r\n        <Route\r\n          path=\"/Especialidades\"\r\n          component={Especialidades}\r\n          tipoUsuario=\"2\"\r\n        ></Route>\r\n        {/* <PrivateRoute path=\"/consultas\" component={pacienteConsultas}/> */}\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport Routes from \"./routes\";\r\n\r\nfunction App() {\r\n  return <Routes />;\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}