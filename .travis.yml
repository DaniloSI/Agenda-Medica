language: csharp
mono: none
dotnet: 2.2

script:
 - dotnet restore AgendaMedica/
 
addons:
  sonarcloud:
    organization: "danilosi"
    token:
      secure: "7c193d2a3f4c0c156b593038b1b02b1dca18bb0e" # encrypted value of your token

jdk:
  - oraclejdk8

install:
    - dotnet tool install --global dotnet-sonarscanner
    - dotnet restore AgendaMedica/AgendaMedica.sln

before_script:
    - export PATH="$PATH:/home/travis/.dotnet/tools"
    
script:
  - dotnet sonarscanner begin /k:DaniloSI_Agenda-Medica /d:sonar.login=7c193d2a3f4c0c156b593038b1b02b1dca18bb0e /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="AgendaMedica/AgendaMedica.Domain.Teste/coverage.opencover.xml" /d:sonar.verbose=false
  - dotnet build --force AgendaMedica/AgendaMedica.sln
  - dotnet test AgendaMedica/AgendaMedica.Domain.Teste/AgendaMedica.Domain.Test.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:ExcludeByFile=\"AgendaMedica/AgendaMedica.Data/Migrations/*.cs\"
  - dotnet sonarscanner end /d:sonar.login=7c193d2a3f4c0c156b593038b1b02b1dca18bb0e || true

cache:
  directories:
    - "~/.nuget/packages"
    - "~/.local/share/NuGet/Cache"
    - "~/.sonar/cache"

# script:
#  # the following command line builds the project, runs the tests with coverage and then execute the SonarCloud analysis
#  - sonar-scanner
